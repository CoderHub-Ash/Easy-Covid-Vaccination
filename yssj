import { Component } from '@angular/core';
import { FormControl } from '@angular/forms';
import { COMMA, ENTER } from '@angular/cdk/keycodes';

@Component({
  selector: 'app-other-benchmark',
  templateUrl: './other-benchmark.component.html',
  styleUrls: ['./other-benchmark.component.css'],
})
export class OtherBenchmarkComponent {
  otherBenchmarkControl = new FormControl('');
  separatorKeyCodes = [ENTER, COMMA];
  otherBenchmarkChips: string[] = [];
  validation = { isvalidOB: true }; // Replace with actual validation logic

  addChip(event: any): void {
    const value = (event.value || '').trim();
    if (value) {
      this.otherBenchmarkChips.push(value);
    }
    // Clear the input
    if (event.input) {
      event.input.value = '';
    }
    this.otherBenchmarkControl.setValue('');
  }

  removeChip(chip: string): void {
    const index = this.otherBenchmarkChips.indexOf(chip);
    if (index >= 0) {
      this.otherBenchmarkChips.splice(index, 1);
    }
  }
}



import { Component } from '@angular/core';
import { FormControl } from '@angular/forms';
import { COMMA, ENTER } from '@angular/cdk/keycodes';

@Component({
  selector: 'app-other-benchmark',
  templateUrl: './other-benchmark.component.html',
  styleUrls: ['./other-benchmark.component.css'],
})
export class OtherBenchmarkComponent {
  otherBenchmarkControl = new FormControl('');
  separatorKeyCodes = [ENTER, COMMA];
  otherBenchmarkChips: string[] = [];
  validation = { isvalidOB: true }; // Replace with actual validation logic

  addChip(event: any): void {
    const value = (event.value || '').trim();
    if (value) {
      this.otherBenchmarkChips.push(value);
    }
    // Clear the input
    if (event.input) {
      event.input.value = '';
    }
    this.otherBenchmarkControl.setValue('');
  }

  removeChip(chip: string): void {
    const index = this.otherBenchmarkChips.indexOf(chip);
    if (index >= 0) {
      this.otherBenchmarkChips.splice(index, 1);
    }
  }
}




mat-chip-list {
  height: auto;

  .mat-chip-list-wrapper {
    border-bottom: 2px solid transparent; // Default border
    transition: border-color 0.2s ease-in-out;
  }

  &.mat-focused .mat-chip-list-wrapper {
    border-bottom: 2px solid $bnp-green !important; // Match the focus style
  }

  input {
    outline: none;
    border: none;
    box-shadow: none;
    padding: 4px 0;
    font-size: 14px;
    width: 100%;
  }

  mat-chip {
    margin: 4px;
    background-color: #e0e0e0;
    color: #424242;

    .mat-icon {
      color: #757575;
    }

    &:hover {
      background-color: lighten(#e0e0e0, 10%);
    }
  }
}
