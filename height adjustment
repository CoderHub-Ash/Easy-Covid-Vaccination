def allocate_table_width(table, original_table_width, min_column_width):
    # Step 1: Calculate longest text width for each column
    column_widths = []
    for column in table.columns:
        max_text_length = max([len(cell.text) for cell in column])
        column_widths.append(max_text_length)

    # Step 2: Calculate new table width based on column widths
    new_table_width = sum(column_widths)

    # Step 3: Compare new width with the original table width
    width_difference = new_table_width - original_table_width

    if width_difference > 0:
        # Step 4: Reduce the difference equally in columns (excluding the first column)
        for i in range(1, len(column_widths)):
            reduction = min(width_difference / (len(column_widths) - 1), column_widths[i] - min_column_width)
            column_widths[i] -= reduction
            width_difference -= reduction
            if width_difference <= 0:
                break
    elif width_difference < 0:
        # Step 5: Add the difference equally to all columns
        increment = abs(width_difference) / len(column_widths)
        for i in range(len(column_widths)):
            column_widths[i] += increment

    # Step 6: Ensure no column is below the minimum width
    for i in range(len(column_widths)):
        if column_widths[i] < min_column_width:
            excess = min_column_width - column_widths[i]
            column_widths[i] = min_column_width
            # Adjust other columns to maintain overall width
            adjust_excess(column_widths, i, excess)

    # Step 7: Apply the final column widths to the table
    apply_widths_to_table(table, column_widths)


def adjust_excess(column_widths, fixed_index, excess):
    # Distribute excess reduction across other columns
    other_indices = [i for i in range(len(column_widths)) if i != fixed_index]
    reduction = excess / len(other_indices)
    for i in other_indices:
        column_widths[i] = max(column_widths[i] - reduction, min_column_width)


def apply_widths_to_table(table, column_widths):
    # Apply the calculated widths to the table
    for i, column in enumerate(table.columns):
        column.width = column_widths[i]