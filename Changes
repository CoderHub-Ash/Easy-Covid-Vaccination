// Store paragraph indices where the placeholder appears
var paraIndexToReplace = -1;

for (int i = 0; i < textFrame.Paragraphs.Count; i++)
{
    var paragraph = textFrame.Paragraphs[i];

    for (int j = 0; j < paragraph.Portions.Count; j++)
    {
        var portion = paragraph.Portions[j];
        string existingText = portion.Text;

        if (existingText.Contains("[UNDERLYING_BULLET_POINTS]"))
        {
            // Store index to replace after loop
            paraIndexToReplace = i;

            // Replace text now to prepare bullet strings
            string bulletText = replaceText.ReplacePlaceholderWithValue("[UNDERLYING_BULLET_POINTS]", brochureData, strategyMdsCode, productCharacteristics.Where(bd => !bd.IsBenchmark).FirstOrDefault());

            var bulletPoints = bulletText.Split(new[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

            // Create new bullet paragraphs
            var newBulletParagraphs = new List<Paragraph>();

            foreach (var bullet in bulletPoints)
            {
                var newPara = new Paragraph();
                newPara.ParagraphFormat.Bullet.Type = BulletType.Symbol;
                newPara.ParagraphFormat.Bullet.Font = new FontData("Arial");

                var newPortion = new Portion(bullet.Trim());
                newPara.Portions.Add(newPortion);

                newBulletParagraphs.Add(newPara);
            }

            // Replace the original paragraph AFTER the loop
            textFrame.Paragraphs.RemoveAt(paraIndexToReplace);
            foreach (var bp in newBulletParagraphs)
            {
                textFrame.Paragraphs.Insert(paraIndexToReplace++, bp);
            }

            // Exit inner loop early
            break;
        }
    }

    // Exit outer loop early if we replaced it
    if (paraIndexToReplace != -1)
        break;
}